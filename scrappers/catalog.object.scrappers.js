const logger = require("../utils/logger.utils");
const loggerInstance = require("../utils/loggerInstance.utils");
const makeQuery = require("../utils/makeQuery.utils");
require('dotenv').config();

const objectLogger = logger(
    process.env.LOGGER_LEVEL, 
    loggerInstance, 
    "OBJECT SCRAPPER"
);

module.exports = {
    async createObjectDetails (id) {
        try {
            const data = await this._getObject(id);
            const object = await this._composeObject(data);

            return object;
        } catch (error) {
            objectLogger.error(error);
        }
    },

    async _getObject (id) {
        try {
            const data = await makeQuery.makeQuery(
                "getCatalogObject",
                "Catalog",
                { id }
            );

            return data;
        } catch (error) {
            objectLogger.error(error);
        }
    },

    async _composeObject (data) {
        try {
            let status = "–ù–µ–º–∞ –≤ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ";
            if (data.status) status = "–Ñ –≤ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ";

            const object = {};
            object.media = [];

            const photo = data.photo.split("_");
            for (let i = 0; i < photo.length; i++) {
                object.media.push({
                    type: 'photo',
                    media: photo[i],
                  })
            }
    
            object.text = `
${data.name}
    
${data.info}
    
–°—Ç–∞—Ç—É—Å: ${status}
üíµ–¶—ñ–Ω–∞ - ${data.price} –≥—Ä–Ω

–ó–∞–º–æ–≤–ª—è—Ç–∏ –º–æ–∂–Ω–∞ –≤—ñ–¥ 1 —à—Ç, —è–∫ —ñ –≤–µ—Å—å —Ç–æ–≤–∞—Ä –Ω–∞ –∫–∞–Ω–∞–ª—ñ, 1 —à—Ç —Ç–µ–∂ –º–æ–∂–Ω–∞.
(—Ü—ñ–Ω–∞, —Å—Ç–∞—Ç—É—Å —Ç–∞ —ñ–Ω—à–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Ç–æ–≤–∞—Ä –∞–∫—Ç—É–∞–ª—å–Ω–∞ —Å—Ç–∞–Ω–æ–º –Ω–∞ ${(new Date()).getHours()-3}:00)
            `
    
            return object;
        } catch (error) {
            objectLogger.error(error);
        }
    }
}